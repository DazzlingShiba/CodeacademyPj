class School{
  constructor(name, level, numberOfStudents){
    this._name=name;
    this._level=level;
    this._numberOfStudents=numberOfStudents;
  }
  get name(){
    return this._name;
  }
  get level(){
    return this._level;
  }
  get numberOfStudents(){
    return this._numberOfStudents;
  }
  set numberOfStudents(num){
    this._numberOfStudents=num;
  }
  quickFacts(){
    console.log(`${this.name} educates ${this.numberOfStudents} students at the ${this.level} school level`);
  }
  static pickSubstituteTeacher(substituteTeachers){
    //parameter is an array of strings
    console.log(substituteTeachers.length)
    let rand= Math.floor(Math.random()*substituteTeachers.length);
    return substituteTeachers[rand];
  }
}
class PrimarySchool extends School{
  constructor(name, numberOfStudents, pickupPolicy){
    super(name, 'primary', numberOfStudents);
    this._pickupPolicy=pickupPolicy;
  }
  get pickupPolicy(){
    return this._pickupPolicy;
  }
}
class MiddleSchool extends School{
  constructor(name, numberOfStudents){
    super(name, 'middle', numberOfStudents);
  }
}
class HighSchool extends School{
  constructor(name, numberOfStudents, sportsTeams){
    super(name, 'high', numberOfStudents);
    this._sportsTeam=sportsTeams;
  }
  get sportsTeam(){
    return this._sportsTeam;
  }
}
/*
const sa= new School('Shiba', 'b', 5000);
sa.quickFacts();
console.log(School.pickSubstituteTeacher(['Ms A', "Mr B", 'Mrs C']))*/
const lorraineHansbury=new PrimarySchool('Lorraine Hansbury', 514, 'Students must be picked up by a parent, guardian, or a family member over the age of 13.');
lorraineHansbury.quickFacts();
console.log(School.pickSubstituteTeacher(['Jamal Crawford', 'Lou Williams', 'J. R. Smith', 'James Harden', 'Jason Terry', 'Manu Ginobli']));
const alSmith= new HighSchool('Al E. Smith', 415, ['Baseball', 'Basketball', 'Volleyball', 'Track and Field']);
console.log(alSmith.sportsTeam);
